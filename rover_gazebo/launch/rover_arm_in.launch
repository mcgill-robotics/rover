<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="gui_required" default="true"/>
    <arg name="mesh_enabled" default="true"/>



    <arg name="robot_namespace" default="/"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" default="false"/>
        <arg name="gui_required" value="$(arg gui_required)"/>

    </include>

    <group ns="$(arg robot_namespace)">


        <param name="robot_description" command="$(find xacro)/xacro '$(find rover_gazebo)/urdf/rover.urdf.xacro'
            --inorder  mesh_enabled:=$(arg mesh_enabled)" />

        <node name="ds_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="  -z 0.0 
                        -urdf 
                        -param robot_description 
                        -model $(arg robot_namespace)" />


        <rosparam command="load" file="$(find rover_gazebo)/config/control.yml" />

        <node name="base_controller_spawner" pkg="controller_manager" type="spawner" 
                args="rover_joint_state_controller
                      rover_velocity_controller
                      joint_1_controller
                      joint_2_controller
                      joint_3_controller
                      joint_4_controller
                      joint_5_controller
                      joint_6_controller
                      joint_7_controller
                      "/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        </node>


    </group>

    <!-- Node for the Game controller -->
    <node pkg="human_control_interface" type="Joystick.py" name="gamepad" output="screen">
    </node>

    <!-- Node for the arm controller -->
    <node pkg="arm_control" type="arm_controller.py" name="arm_controller" output="screen">
    </node>

    <node pkg="arm_control" type="joystick_gazebo_trans.py" name="joy_to_gaz" output="screen">
    </node>

</launch>